
memory.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <create_memory>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
   8:	89 7d ec             	mov    %edi,-0x14(%rbp)
   b:	bf 28 00 00 00       	mov    $0x28,%edi
  10:	e8 00 00 00 00       	callq  15 <create_memory+0x15>
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	8b 45 ec             	mov    -0x14(%rbp),%eax
  1c:	48 98                	cltq   
  1e:	48 c1 e0 03          	shl    $0x3,%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	callq  2a <create_memory+0x2a>
  2a:	48 89 c2             	mov    %rax,%rdx
  2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  31:	48 89 10             	mov    %rdx,(%rax)
  34:	8b 45 ec             	mov    -0x14(%rbp),%eax
  37:	48 98                	cltq   
  39:	48 c1 e0 02          	shl    $0x2,%rax
  3d:	48 89 c7             	mov    %rax,%rdi
  40:	e8 00 00 00 00       	callq  45 <create_memory+0x45>
  45:	48 89 c2             	mov    %rax,%rdx
  48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4c:	48 89 50 08          	mov    %rdx,0x8(%rax)
  50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  54:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
  5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
  66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6a:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)
  71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  75:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
  7c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  83:	89 50 20             	mov    %edx,0x20(%rax)
  86:	8b 55 ec             	mov    -0x14(%rbp),%edx
  89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  8d:	89 50 24             	mov    %edx,0x24(%rax)
  90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  94:	c9                   	leaveq 
  95:	c3                   	retq   

0000000000000096 <add_segment>:
  96:	55                   	push   %rbp
  97:	48 89 e5             	mov    %rsp,%rbp
  9a:	48 83 ec 10          	sub    $0x10,%rsp
  9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  aa:	8b 50 18             	mov    0x18(%rax),%edx
  ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  b1:	8b 40 20             	mov    0x20(%rax),%eax
  b4:	39 c2                	cmp    %eax,%edx
  b6:	75 0c                	jne    c4 <add_segment+0x2e>
  b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  bc:	48 89 c7             	mov    %rax,%rdi
  bf:	e8 00 00 00 00       	callq  c4 <add_segment+0x2e>
  c4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  c8:	48 8b 10             	mov    (%rax),%rdx
  cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  cf:	8b 40 10             	mov    0x10(%rax),%eax
  d2:	89 c0                	mov    %eax,%eax
  d4:	48 c1 e0 03          	shl    $0x3,%rax
  d8:	48 01 c2             	add    %rax,%rdx
  db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  df:	48 89 02             	mov    %rax,(%rdx)
  e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  e6:	8b 40 10             	mov    0x10(%rax),%eax
  e9:	8d 50 01             	lea    0x1(%rax),%edx
  ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  f0:	89 50 10             	mov    %edx,0x10(%rax)
  f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  f7:	8b 40 18             	mov    0x18(%rax),%eax
  fa:	8d 50 01             	lea    0x1(%rax),%edx
  fd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 101:	89 50 18             	mov    %edx,0x18(%rax)
 104:	90                   	nop
 105:	c9                   	leaveq 
 106:	c3                   	retq   

0000000000000107 <get_segment>:
 107:	55                   	push   %rbp
 108:	48 89 e5             	mov    %rsp,%rbp
 10b:	89 7d fc             	mov    %edi,-0x4(%rbp)
 10e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 112:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 116:	48 8b 00             	mov    (%rax),%rax
 119:	8b 55 fc             	mov    -0x4(%rbp),%edx
 11c:	48 c1 e2 03          	shl    $0x3,%rdx
 120:	48 01 d0             	add    %rdx,%rax
 123:	48 8b 00             	mov    (%rax),%rax
 126:	5d                   	pop    %rbp
 127:	c3                   	retq   

0000000000000128 <rem_segment>:
 128:	55                   	push   %rbp
 129:	48 89 e5             	mov    %rsp,%rbp
 12c:	48 83 ec 10          	sub    $0x10,%rsp
 130:	89 7d fc             	mov    %edi,-0x4(%rbp)
 133:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 137:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 13b:	8b 45 fc             	mov    -0x4(%rbp),%eax
 13e:	48 89 d6             	mov    %rdx,%rsi
 141:	89 c7                	mov    %eax,%edi
 143:	e8 00 00 00 00       	callq  148 <rem_segment+0x20>
 148:	48 89 c7             	mov    %rax,%rdi
 14b:	e8 00 00 00 00       	callq  150 <rem_segment+0x28>
 150:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 154:	8b 40 18             	mov    0x18(%rax),%eax
 157:	8d 50 ff             	lea    -0x1(%rax),%edx
 15a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 15e:	89 50 18             	mov    %edx,0x18(%rax)
 161:	90                   	nop
 162:	c9                   	leaveq 
 163:	c3                   	retq   

0000000000000164 <free_memory>:
 164:	55                   	push   %rbp
 165:	48 89 e5             	mov    %rsp,%rbp
 168:	48 83 ec 20          	sub    $0x20,%rsp
 16c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 170:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 177:	eb 2f                	jmp    1a8 <free_memory+0x44>
 179:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 17d:	48 8b 00             	mov    (%rax),%rax
 180:	8b 55 fc             	mov    -0x4(%rbp),%edx
 183:	48 c1 e2 03          	shl    $0x3,%rdx
 187:	48 01 d0             	add    %rdx,%rax
 18a:	48 8b 00             	mov    (%rax),%rax
 18d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 191:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
 196:	74 0c                	je     1a4 <free_memory+0x40>
 198:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 19c:	48 89 c7             	mov    %rax,%rdi
 19f:	e8 00 00 00 00       	callq  1a4 <free_memory+0x40>
 1a4:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 1a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1ac:	8b 40 10             	mov    0x10(%rax),%eax
 1af:	3b 45 fc             	cmp    -0x4(%rbp),%eax
 1b2:	77 c5                	ja     179 <free_memory+0x15>
 1b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1b8:	48 8b 00             	mov    (%rax),%rax
 1bb:	48 89 c7             	mov    %rax,%rdi
 1be:	e8 00 00 00 00       	callq  1c3 <free_memory+0x5f>
 1c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1c7:	48 8b 40 08          	mov    0x8(%rax),%rax
 1cb:	48 89 c7             	mov    %rax,%rdi
 1ce:	e8 00 00 00 00       	callq  1d3 <free_memory+0x6f>
 1d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1d7:	48 89 c7             	mov    %rax,%rdi
 1da:	e8 00 00 00 00       	callq  1df <free_memory+0x7b>
 1df:	90                   	nop
 1e0:	c9                   	leaveq 
 1e1:	c3                   	retq   

00000000000001e2 <get_mem_size>:
 1e2:	55                   	push   %rbp
 1e3:	48 89 e5             	mov    %rsp,%rbp
 1e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 1ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1ee:	8b 40 18             	mov    0x18(%rax),%eax
 1f1:	5d                   	pop    %rbp
 1f2:	c3                   	retq   

00000000000001f3 <add_id>:
 1f3:	55                   	push   %rbp
 1f4:	48 89 e5             	mov    %rsp,%rbp
 1f7:	48 83 ec 10          	sub    $0x10,%rsp
 1fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 1ff:	89 75 f4             	mov    %esi,-0xc(%rbp)
 202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 206:	48 8b 50 08          	mov    0x8(%rax),%rdx
 20a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 20e:	8b 40 14             	mov    0x14(%rax),%eax
 211:	89 c0                	mov    %eax,%eax
 213:	48 c1 e0 02          	shl    $0x2,%rax
 217:	48 01 c2             	add    %rax,%rdx
 21a:	8b 45 f4             	mov    -0xc(%rbp),%eax
 21d:	89 02                	mov    %eax,(%rdx)
 21f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 223:	8b 40 14             	mov    0x14(%rax),%eax
 226:	8d 50 01             	lea    0x1(%rax),%edx
 229:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 22d:	89 50 14             	mov    %edx,0x14(%rax)
 230:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 234:	8b 40 1c             	mov    0x1c(%rax),%eax
 237:	8d 50 01             	lea    0x1(%rax),%edx
 23a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 23e:	89 50 1c             	mov    %edx,0x1c(%rax)
 241:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 245:	8b 50 1c             	mov    0x1c(%rax),%edx
 248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 24c:	8b 40 24             	mov    0x24(%rax),%eax
 24f:	39 c2                	cmp    %eax,%edx
 251:	75 0c                	jne    25f <add_id+0x6c>
 253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 257:	48 89 c7             	mov    %rax,%rdi
 25a:	e8 00 00 00 00       	callq  25f <add_id+0x6c>
 25f:	90                   	nop
 260:	c9                   	leaveq 
 261:	c3                   	retq   

0000000000000262 <remove_id>:
 262:	55                   	push   %rbp
 263:	48 89 e5             	mov    %rsp,%rbp
 266:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 26a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 26e:	8b 40 1c             	mov    0x1c(%rax),%eax
 271:	8d 50 ff             	lea    -0x1(%rax),%edx
 274:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 278:	89 50 1c             	mov    %edx,0x1c(%rax)
 27b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 27f:	8b 40 14             	mov    0x14(%rax),%eax
 282:	8d 50 ff             	lea    -0x1(%rax),%edx
 285:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 289:	89 50 14             	mov    %edx,0x14(%rax)
 28c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 290:	48 8b 50 08          	mov    0x8(%rax),%rdx
 294:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 298:	8b 40 14             	mov    0x14(%rax),%eax
 29b:	89 c0                	mov    %eax,%eax
 29d:	48 c1 e0 02          	shl    $0x2,%rax
 2a1:	48 01 d0             	add    %rdx,%rax
 2a4:	8b 00                	mov    (%rax),%eax
 2a6:	5d                   	pop    %rbp
 2a7:	c3                   	retq   

00000000000002a8 <get_num_unused>:
 2a8:	55                   	push   %rbp
 2a9:	48 89 e5             	mov    %rsp,%rbp
 2ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 2b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 2b4:	8b 40 1c             	mov    0x1c(%rax),%eax
 2b7:	5d                   	pop    %rbp
 2b8:	c3                   	retq   

00000000000002b9 <put_segment>:
 2b9:	55                   	push   %rbp
 2ba:	48 89 e5             	mov    %rsp,%rbp
 2bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 2c1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 2c5:	89 55 ec             	mov    %edx,-0x14(%rbp)
 2c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 2cc:	48 8b 00             	mov    (%rax),%rax
 2cf:	8b 55 ec             	mov    -0x14(%rbp),%edx
 2d2:	48 c1 e2 03          	shl    $0x3,%rdx
 2d6:	48 01 c2             	add    %rax,%rdx
 2d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 2dd:	48 89 02             	mov    %rax,(%rdx)
 2e0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
 2e5:	74 11                	je     2f8 <put_segment+0x3f>
 2e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 2eb:	8b 40 18             	mov    0x18(%rax),%eax
 2ee:	8d 50 01             	lea    0x1(%rax),%edx
 2f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 2f5:	89 50 18             	mov    %edx,0x18(%rax)
 2f8:	90                   	nop
 2f9:	5d                   	pop    %rbp
 2fa:	c3                   	retq   

00000000000002fb <get_curr_id>:
 2fb:	55                   	push   %rbp
 2fc:	48 89 e5             	mov    %rsp,%rbp
 2ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 303:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 307:	8b 40 10             	mov    0x10(%rax),%eax
 30a:	5d                   	pop    %rbp
 30b:	c3                   	retq   

000000000000030c <expand_memory>:
 30c:	55                   	push   %rbp
 30d:	48 89 e5             	mov    %rsp,%rbp
 310:	48 83 ec 20          	sub    $0x20,%rsp
 314:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 318:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 31c:	8b 40 18             	mov    0x18(%rax),%eax
 31f:	89 45 f8             	mov    %eax,-0x8(%rbp)
 322:	8b 45 f8             	mov    -0x8(%rbp),%eax
 325:	48 98                	cltq   
 327:	48 c1 e0 04          	shl    $0x4,%rax
 32b:	48 89 c7             	mov    %rax,%rdi
 32e:	e8 00 00 00 00       	callq  333 <expand_memory+0x27>
 333:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 337:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 33e:	eb 32                	jmp    372 <expand_memory+0x66>
 340:	8b 45 fc             	mov    -0x4(%rbp),%eax
 343:	48 98                	cltq   
 345:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 34c:	00 
 34d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 351:	48 01 c2             	add    %rax,%rdx
 354:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 358:	48 8b 00             	mov    (%rax),%rax
 35b:	8b 4d fc             	mov    -0x4(%rbp),%ecx
 35e:	48 63 c9             	movslq %ecx,%rcx
 361:	48 c1 e1 03          	shl    $0x3,%rcx
 365:	48 01 c8             	add    %rcx,%rax
 368:	48 8b 00             	mov    (%rax),%rax
 36b:	48 89 02             	mov    %rax,(%rdx)
 36e:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 372:	8b 45 fc             	mov    -0x4(%rbp),%eax
 375:	3b 45 f8             	cmp    -0x8(%rbp),%eax
 378:	7c c6                	jl     340 <expand_memory+0x34>
 37a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 37e:	48 8b 00             	mov    (%rax),%rax
 381:	48 89 c7             	mov    %rax,%rdi
 384:	e8 00 00 00 00       	callq  389 <expand_memory+0x7d>
 389:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 38d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 391:	48 89 10             	mov    %rdx,(%rax)
 394:	8b 45 f8             	mov    -0x8(%rbp),%eax
 397:	01 c0                	add    %eax,%eax
 399:	89 c2                	mov    %eax,%edx
 39b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 39f:	89 50 20             	mov    %edx,0x20(%rax)
 3a2:	90                   	nop
 3a3:	c9                   	leaveq 
 3a4:	c3                   	retq   

00000000000003a5 <expand_ids>:
 3a5:	55                   	push   %rbp
 3a6:	48 89 e5             	mov    %rsp,%rbp
 3a9:	48 83 ec 20          	sub    $0x20,%rsp
 3ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 3b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3b5:	8b 40 1c             	mov    0x1c(%rax),%eax
 3b8:	89 45 f8             	mov    %eax,-0x8(%rbp)
 3bb:	8b 45 f8             	mov    -0x8(%rbp),%eax
 3be:	48 98                	cltq   
 3c0:	48 c1 e0 03          	shl    $0x3,%rax
 3c4:	48 89 c7             	mov    %rax,%rdi
 3c7:	e8 00 00 00 00       	callq  3cc <expand_ids+0x27>
 3cc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 3d0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 3d7:	eb 31                	jmp    40a <expand_ids+0x65>
 3d9:	8b 45 fc             	mov    -0x4(%rbp),%eax
 3dc:	48 98                	cltq   
 3de:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 3e5:	00 
 3e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3ea:	48 01 c2             	add    %rax,%rdx
 3ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3f1:	48 8b 40 08          	mov    0x8(%rax),%rax
 3f5:	8b 4d fc             	mov    -0x4(%rbp),%ecx
 3f8:	48 63 c9             	movslq %ecx,%rcx
 3fb:	48 c1 e1 02          	shl    $0x2,%rcx
 3ff:	48 01 c8             	add    %rcx,%rax
 402:	8b 00                	mov    (%rax),%eax
 404:	89 02                	mov    %eax,(%rdx)
 406:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 40a:	8b 45 fc             	mov    -0x4(%rbp),%eax
 40d:	3b 45 f8             	cmp    -0x8(%rbp),%eax
 410:	7c c7                	jl     3d9 <expand_ids+0x34>
 412:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 416:	48 8b 40 08          	mov    0x8(%rax),%rax
 41a:	48 89 c7             	mov    %rax,%rdi
 41d:	e8 00 00 00 00       	callq  422 <expand_ids+0x7d>
 422:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 426:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 42a:	48 89 50 08          	mov    %rdx,0x8(%rax)
 42e:	8b 45 f8             	mov    -0x8(%rbp),%eax
 431:	01 c0                	add    %eax,%eax
 433:	89 c2                	mov    %eax,%edx
 435:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 439:	89 50 24             	mov    %edx,0x24(%rax)
 43c:	90                   	nop
 43d:	c9                   	leaveq 
 43e:	c3                   	retq   
