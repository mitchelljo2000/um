
instructions.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <move>:
   0:	89 ff                	mov    %edi,%edi
   2:	48 89 f8             	mov    %rdi,%rax
   5:	83 e0 07             	and    $0x7,%eax
   8:	8b 04 86             	mov    (%rsi,%rax,4),%eax
   b:	85 c0                	test   %eax,%eax
   d:	74 19                	je     28 <move+0x28>
   f:	48 89 f8             	mov    %rdi,%rax
  12:	48 c1 e7 37          	shl    $0x37,%rdi
  16:	48 c1 e0 3a          	shl    $0x3a,%rax
  1a:	48 c1 ef 3d          	shr    $0x3d,%rdi
  1e:	48 c1 e8 3d          	shr    $0x3d,%rax
  22:	8b 04 86             	mov    (%rsi,%rax,4),%eax
  25:	89 04 be             	mov    %eax,(%rsi,%rdi,4)
  28:	f3 c3                	repz retq 
  2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000030 <load_segment>:
  30:	89 ff                	mov    %edi,%edi
  32:	48 89 f8             	mov    %rdi,%rax
  35:	48 c1 e0 3a          	shl    $0x3a,%rax
  39:	48 c1 e8 3d          	shr    $0x3d,%rax
  3d:	8b 0c 86             	mov    (%rsi,%rax,4),%ecx
  40:	48 8b 02             	mov    (%rdx),%rax
  43:	48 89 fa             	mov    %rdi,%rdx
  46:	83 e2 07             	and    $0x7,%edx
  49:	48 c1 e7 37          	shl    $0x37,%rdi
  4d:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
  51:	48 c1 ef 3d          	shr    $0x3d,%rdi
  55:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  59:	8b 44 90 08          	mov    0x8(%rax,%rdx,4),%eax
  5d:	89 04 be             	mov    %eax,(%rsi,%rdi,4)
  60:	c3                   	retq   
  61:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  6d:	00 00 00 

0000000000000070 <store_segment>:
  70:	89 ff                	mov    %edi,%edi
  72:	48 89 f0             	mov    %rsi,%rax
  75:	48 89 f9             	mov    %rdi,%rcx
  78:	48 c1 e1 3a          	shl    $0x3a,%rcx
  7c:	48 c1 e9 3d          	shr    $0x3d,%rcx
  80:	8b 0c 8e             	mov    (%rsi,%rcx,4),%ecx
  83:	48 89 fe             	mov    %rdi,%rsi
  86:	48 c1 e7 37          	shl    $0x37,%rdi
  8a:	48 c1 ef 3d          	shr    $0x3d,%rdi
  8e:	83 e6 07             	and    $0x7,%esi
  91:	8b 3c b8             	mov    (%rax,%rdi,4),%edi
  94:	8b 34 b0             	mov    (%rax,%rsi,4),%esi
  97:	48 8b 02             	mov    (%rdx),%rax
  9a:	89 ca                	mov    %ecx,%edx
  9c:	48 8b 3c f8          	mov    (%rax,%rdi,8),%rdi
  a0:	e9 00 00 00 00       	jmpq   a5 <store_segment+0x35>
  a5:	90                   	nop
  a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  ad:	00 00 00 

00000000000000b0 <add>:
  b0:	89 ff                	mov    %edi,%edi
  b2:	48 89 f9             	mov    %rdi,%rcx
  b5:	48 89 f8             	mov    %rdi,%rax
  b8:	83 e7 07             	and    $0x7,%edi
  bb:	48 c1 e1 3a          	shl    $0x3a,%rcx
  bf:	8b 14 be             	mov    (%rsi,%rdi,4),%edx
  c2:	48 c1 e0 37          	shl    $0x37,%rax
  c6:	48 c1 e9 3d          	shr    $0x3d,%rcx
  ca:	48 c1 e8 3d          	shr    $0x3d,%rax
  ce:	03 14 8e             	add    (%rsi,%rcx,4),%edx
  d1:	89 14 86             	mov    %edx,(%rsi,%rax,4)
  d4:	c3                   	retq   
  d5:	90                   	nop
  d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  dd:	00 00 00 

00000000000000e0 <multiply>:
  e0:	89 ff                	mov    %edi,%edi
  e2:	48 89 fa             	mov    %rdi,%rdx
  e5:	48 89 f8             	mov    %rdi,%rax
  e8:	83 e7 07             	and    $0x7,%edi
  eb:	48 c1 e2 3a          	shl    $0x3a,%rdx
  ef:	48 c1 e0 37          	shl    $0x37,%rax
  f3:	48 c1 ea 3d          	shr    $0x3d,%rdx
  f7:	48 c1 e8 3d          	shr    $0x3d,%rax
  fb:	8b 14 96             	mov    (%rsi,%rdx,4),%edx
  fe:	0f af 14 be          	imul   (%rsi,%rdi,4),%edx
 102:	89 14 86             	mov    %edx,(%rsi,%rax,4)
 105:	c3                   	retq   
 106:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 10d:	00 00 00 

0000000000000110 <divide>:
 110:	89 ff                	mov    %edi,%edi
 112:	31 d2                	xor    %edx,%edx
 114:	48 89 f8             	mov    %rdi,%rax
 117:	48 89 f9             	mov    %rdi,%rcx
 11a:	83 e7 07             	and    $0x7,%edi
 11d:	48 c1 e0 3a          	shl    $0x3a,%rax
 121:	48 c1 e1 37          	shl    $0x37,%rcx
 125:	48 c1 e8 3d          	shr    $0x3d,%rax
 129:	48 c1 e9 3d          	shr    $0x3d,%rcx
 12d:	8b 04 86             	mov    (%rsi,%rax,4),%eax
 130:	f7 34 be             	divl   (%rsi,%rdi,4)
 133:	89 04 8e             	mov    %eax,(%rsi,%rcx,4)
 136:	c3                   	retq   
 137:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 13e:	00 00 

0000000000000140 <nand>:
 140:	89 ff                	mov    %edi,%edi
 142:	48 89 f8             	mov    %rdi,%rax
 145:	48 89 fa             	mov    %rdi,%rdx
 148:	83 e7 07             	and    $0x7,%edi
 14b:	48 c1 e0 3a          	shl    $0x3a,%rax
 14f:	48 c1 e2 37          	shl    $0x37,%rdx
 153:	48 c1 e8 3d          	shr    $0x3d,%rax
 157:	48 c1 ea 3d          	shr    $0x3d,%rdx
 15b:	8b 04 86             	mov    (%rsi,%rax,4),%eax
 15e:	23 04 be             	and    (%rsi,%rdi,4),%eax
 161:	f7 d0                	not    %eax
 163:	89 04 96             	mov    %eax,(%rsi,%rdx,4)
 166:	c3                   	retq   
 167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 16e:	00 00 

0000000000000170 <map>:
 170:	89 ff                	mov    %edi,%edi
 172:	41 56                	push   %r14
 174:	41 55                	push   %r13
 176:	41 54                	push   %r12
 178:	55                   	push   %rbp
 179:	48 89 d5             	mov    %rdx,%rbp
 17c:	53                   	push   %rbx
 17d:	48 89 fb             	mov    %rdi,%rbx
 180:	83 e7 07             	and    $0x7,%edi
 183:	8b 3c be             	mov    (%rsi,%rdi,4),%edi
 186:	49 89 f4             	mov    %rsi,%r12
 189:	48 c1 e3 3a          	shl    $0x3a,%rbx
 18d:	48 c1 eb 3d          	shr    $0x3d,%rbx
 191:	e8 00 00 00 00       	callq  196 <map+0x26>
 196:	48 89 ef             	mov    %rbp,%rdi
 199:	49 89 c5             	mov    %rax,%r13
 19c:	e8 00 00 00 00       	callq  1a1 <map+0x31>
 1a1:	85 c0                	test   %eax,%eax
 1a3:	74 2b                	je     1d0 <map+0x60>
 1a5:	48 89 ef             	mov    %rbp,%rdi
 1a8:	e8 00 00 00 00       	callq  1ad <map+0x3d>
 1ad:	48 89 ee             	mov    %rbp,%rsi
 1b0:	41 89 c6             	mov    %eax,%r14d
 1b3:	4c 89 ef             	mov    %r13,%rdi
 1b6:	89 c2                	mov    %eax,%edx
 1b8:	e8 00 00 00 00       	callq  1bd <map+0x4d>
 1bd:	45 89 34 9c          	mov    %r14d,(%r12,%rbx,4)
 1c1:	5b                   	pop    %rbx
 1c2:	5d                   	pop    %rbp
 1c3:	41 5c                	pop    %r12
 1c5:	41 5d                	pop    %r13
 1c7:	41 5e                	pop    %r14
 1c9:	c3                   	retq   
 1ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 1d0:	49 8d 1c 9c          	lea    (%r12,%rbx,4),%rbx
 1d4:	48 89 ef             	mov    %rbp,%rdi
 1d7:	e8 00 00 00 00       	callq  1dc <map+0x6c>
 1dc:	48 89 ee             	mov    %rbp,%rsi
 1df:	89 03                	mov    %eax,(%rbx)
 1e1:	4c 89 ef             	mov    %r13,%rdi
 1e4:	5b                   	pop    %rbx
 1e5:	5d                   	pop    %rbp
 1e6:	41 5c                	pop    %r12
 1e8:	41 5d                	pop    %r13
 1ea:	41 5e                	pop    %r14
 1ec:	e9 00 00 00 00       	jmpq   1f1 <map+0x81>
 1f1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 1f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 1fd:	00 00 00 

0000000000000200 <unmap>:
 200:	55                   	push   %rbp
 201:	53                   	push   %rbx
 202:	83 e7 07             	and    $0x7,%edi
 205:	48 89 d3             	mov    %rdx,%rbx
 208:	48 83 ec 08          	sub    $0x8,%rsp
 20c:	8b 2c be             	mov    (%rsi,%rdi,4),%ebp
 20f:	48 89 d6             	mov    %rdx,%rsi
 212:	89 ef                	mov    %ebp,%edi
 214:	e8 00 00 00 00       	callq  219 <unmap+0x19>
 219:	89 ee                	mov    %ebp,%esi
 21b:	48 89 df             	mov    %rbx,%rdi
 21e:	e8 00 00 00 00       	callq  223 <unmap+0x23>
 223:	48 83 c4 08          	add    $0x8,%rsp
 227:	89 ea                	mov    %ebp,%edx
 229:	48 89 de             	mov    %rbx,%rsi
 22c:	5b                   	pop    %rbx
 22d:	5d                   	pop    %rbp
 22e:	31 ff                	xor    %edi,%edi
 230:	e9 00 00 00 00       	jmpq   235 <unmap+0x35>
 235:	90                   	nop
 236:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 23d:	00 00 00 

0000000000000240 <output>:
 240:	83 e7 07             	and    $0x7,%edi
 243:	31 c0                	xor    %eax,%eax
 245:	8b 14 be             	mov    (%rsi,%rdi,4),%edx
 248:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 24f <output+0xf>
 24f:	be 00 00 00 00       	mov    $0x0,%esi
 254:	e9 00 00 00 00       	jmpq   259 <output+0x19>
 259:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000260 <input>:
 260:	55                   	push   %rbp
 261:	53                   	push   %rbx
 262:	48 89 f5             	mov    %rsi,%rbp
 265:	89 fb                	mov    %edi,%ebx
 267:	31 c0                	xor    %eax,%eax
 269:	bf 00 00 00 00       	mov    $0x0,%edi
 26e:	48 83 ec 18          	sub    $0x18,%rsp
 272:	83 e3 07             	and    $0x7,%ebx
 275:	48 8d 74 24 0f       	lea    0xf(%rsp),%rsi
 27a:	e8 00 00 00 00       	callq  27f <input+0x1f>
 27f:	0f be 44 24 0f       	movsbl 0xf(%rsp),%eax
 284:	89 44 9d 00          	mov    %eax,0x0(%rbp,%rbx,4)
 288:	48 83 c4 18          	add    $0x18,%rsp
 28c:	5b                   	pop    %rbx
 28d:	5d                   	pop    %rbp
 28e:	c3                   	retq   
 28f:	90                   	nop

0000000000000290 <load_program>:
 290:	89 ff                	mov    %edi,%edi
 292:	41 57                	push   %r15
 294:	41 56                	push   %r14
 296:	49 89 ff             	mov    %rdi,%r15
 299:	41 55                	push   %r13
 29b:	48 c1 e7 3a          	shl    $0x3a,%rdi
 29f:	41 54                	push   %r12
 2a1:	55                   	push   %rbp
 2a2:	48 c1 ef 3d          	shr    $0x3d,%rdi
 2a6:	53                   	push   %rbx
 2a7:	41 83 e7 07          	and    $0x7,%r15d
 2ab:	48 83 ec 18          	sub    $0x18,%rsp
 2af:	8b 04 be             	mov    (%rsi,%rdi,4),%eax
 2b2:	85 c0                	test   %eax,%eax
 2b4:	75 1a                	jne    2d0 <load_program+0x40>
 2b6:	42 8b 04 be          	mov    (%rsi,%r15,4),%eax
 2ba:	83 e8 01             	sub    $0x1,%eax
 2bd:	89 01                	mov    %eax,(%rcx)
 2bf:	48 83 c4 18          	add    $0x18,%rsp
 2c3:	5b                   	pop    %rbx
 2c4:	5d                   	pop    %rbp
 2c5:	41 5c                	pop    %r12
 2c7:	41 5d                	pop    %r13
 2c9:	41 5e                	pop    %r14
 2cb:	41 5f                	pop    %r15
 2cd:	c3                   	retq   
 2ce:	66 90                	xchg   %ax,%ax
 2d0:	49 89 d5             	mov    %rdx,%r13
 2d3:	48 8b 12             	mov    (%rdx),%rdx
 2d6:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
 2db:	48 89 34 24          	mov    %rsi,(%rsp)
 2df:	45 31 e4             	xor    %r12d,%r12d
 2e2:	4c 8b 34 c2          	mov    (%rdx,%rax,8),%r14
 2e6:	41 8b 1e             	mov    (%r14),%ebx
 2e9:	89 df                	mov    %ebx,%edi
 2eb:	e8 00 00 00 00       	callq  2f0 <load_program+0x60>
 2f0:	85 db                	test   %ebx,%ebx
 2f2:	48 89 c5             	mov    %rax,%rbp
 2f5:	7e 22                	jle    319 <load_program+0x89>
 2f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 2fe:	00 00 
 300:	43 8b 74 a6 08       	mov    0x8(%r14,%r12,4),%esi
 305:	44 89 e2             	mov    %r12d,%edx
 308:	48 89 ef             	mov    %rbp,%rdi
 30b:	49 83 c4 01          	add    $0x1,%r12
 30f:	e8 00 00 00 00       	callq  314 <load_program+0x84>
 314:	44 39 e3             	cmp    %r12d,%ebx
 317:	7f e7                	jg     300 <load_program+0x70>
 319:	49 8b 45 00          	mov    0x0(%r13),%rax
 31d:	48 8b 38             	mov    (%rax),%rdi
 320:	e8 00 00 00 00       	callq  325 <load_program+0x95>
 325:	4c 89 ee             	mov    %r13,%rsi
 328:	48 89 ef             	mov    %rbp,%rdi
 32b:	31 d2                	xor    %edx,%edx
 32d:	e8 00 00 00 00       	callq  332 <load_program+0xa2>
 332:	48 8b 04 24          	mov    (%rsp),%rax
 336:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
 33b:	42 8b 04 b8          	mov    (%rax,%r15,4),%eax
 33f:	83 e8 01             	sub    $0x1,%eax
 342:	89 01                	mov    %eax,(%rcx)
 344:	48 83 c4 18          	add    $0x18,%rsp
 348:	5b                   	pop    %rbx
 349:	5d                   	pop    %rbp
 34a:	41 5c                	pop    %r12
 34c:	41 5d                	pop    %r13
 34e:	41 5e                	pop    %r14
 350:	41 5f                	pop    %r15
 352:	c3                   	retq   
 353:	0f 1f 00             	nopl   (%rax)
 356:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 35d:	00 00 00 

0000000000000360 <load_value>:
 360:	89 ff                	mov    %edi,%edi
 362:	48 89 f8             	mov    %rdi,%rax
 365:	81 e7 ff ff ff 01    	and    $0x1ffffff,%edi
 36b:	48 c1 e0 24          	shl    $0x24,%rax
 36f:	48 c1 e8 3d          	shr    $0x3d,%rax
 373:	89 3c 86             	mov    %edi,(%rsi,%rax,4)
 376:	c3                   	retq   
 377:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 37e:	00 00 

0000000000000380 <parse_registers>:
 380:	89 ff                	mov    %edi,%edi
 382:	48 89 f8             	mov    %rdi,%rax
 385:	48 c1 e0 37          	shl    $0x37,%rax
 389:	48 c1 e8 3d          	shr    $0x3d,%rax
 38d:	89 06                	mov    %eax,(%rsi)
 38f:	48 89 f8             	mov    %rdi,%rax
 392:	83 e7 07             	and    $0x7,%edi
 395:	48 c1 e0 3a          	shl    $0x3a,%rax
 399:	48 c1 e8 3d          	shr    $0x3d,%rax
 39d:	89 02                	mov    %eax,(%rdx)
 39f:	89 39                	mov    %edi,(%rcx)
 3a1:	c3                   	retq   
